name: setup_integrated

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  PYTHONWARNINGS: error
  BASE_IMAGE: openpilot-base
  AZURE_TOKEN: ${{ secrets.AZURE_COMMADATACI_OPENPILOTCI_TOKEN }}

  DOCKER_LOGIN: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
  BUILD: selfdrive/test/docker_build.sh base

  RUN: docker run --shm-size 1G -v $PWD:/tmp/openpilot -w /tmp/openpilot -e CI=1 -e PRE_COMMIT_HOME=/tmp/pre-commit -e PYTHONWARNINGS=error -e FILEREADER_CACHE=1 -e PYTHONPATH=/tmp/openpilot -e NUM_JOBS -e JOB_ID -e GITHUB_ACTION -e GITHUB_REF -e GITHUB_HEAD_REF -e GITHUB_SHA -e GITHUB_REPOSITORY -e GITHUB_RUN_ID -v $GITHUB_WORKSPACE/.ci_cache/pre-commit:/tmp/pre-commit -v $GITHUB_WORKSPACE/.ci_cache/scons_cache:/tmp/scons_cache -v $GITHUB_WORKSPACE/.ci_cache/comma_download_cache:/tmp/comma_download_cache -v $GITHUB_WORKSPACE/.ci_cache/openpilot_cache:/tmp/openpilot_cache $BASE_IMAGE /bin/bash -c

  PYTEST: pytest --continue-on-collection-errors --cov --cov-report=xml --cov-append --durations=0 --durations-min=5 --hypothesis-seed 0 -n logical

jobs:
  build_release:
    name: build release
    runs-on: ubuntu-20.04
    env:
      STRIPPED_DIR: /tmp/releasepilot
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: ./.github/workflows/setup-with-retry


  setup-environment:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Cache Python and Ubuntu dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~/.pyenv
          /usr/local/lib
        key: ${{ runner.os }}-dependencies-${{ hashFiles('**/poetry.lock', '**/.python-version', 'tools/*.sh') }}
        restore-keys: |
          ${{ runner.os }}-dependencies-

    - name: Install System Dependencies
      run: sudo ./tools/install_ubuntu_dependencies.sh

    - name: Setup Python Environment
      run: |
        ./tools/install_python_dependencies.sh
      env:
        PATH: ${{ github.workspace }}/.pyenv/bin:${{ github.workspace }}/.pyenv/shims:$PATH
        PYENV_ROOT: ${{ github.workspace }}/.pyenv
